{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js\";\nimport './App.css';\nimport Barcode from 'react-barcode';\nimport logo from \"./logo.svg\";\nimport { text } from './text-sample';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g;\n\nfunction Base64DecodeUrl(str) {\n  str = str ? (str + '===').slice(0, str.length + str.length % 4) : '';\n  return str.replace(/-/g, '+').replace(/_/g, '/');\n}\n\n_c = Base64DecodeUrl;\nconst letterToNumber = {\n  A: 8,\n  B: 8,\n  C: 0,\n  D: 0,\n  E: 8,\n  F: 8,\n  G: 0,\n  H: 8,\n  I: 1,\n  J: 0,\n  K: 8,\n  L: 1,\n  M: 0,\n  N: 8,\n  O: 0,\n  P: 2,\n  Q: 0,\n  R: 8,\n  S: 5,\n  T: 7,\n  U: 0,\n  V: 0,\n  W: 0,\n  X: 0,\n  Y: 1,\n  Z: 0\n};\n\nfunction replaceLettersWithLikelyDigits(str) {\n  return str.split('').map(digit => {\n    if (isNaN(Number(digit))) {\n      console.log(digit);\n      return letterToNumber[digit];\n    } else return digit;\n  }).join('');\n}\n\nfunction App() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const URLEncodedText = urlParams.get('text');\n  const base64EncodedText = Base64DecodeUrl(URLEncodedText); // const text = atob(base64EncodedText)\n\n  const matches = text.match(re1);\n  const fixedMatches = matches ? matches.map(match => {\n    if (match.length >= 12) {\n      if (/\\d{12}/.test(match)) {\n        return match;\n      } else {\n        return replaceLettersWithLikelyDigits(match);\n      }\n    } else {\n      return '';\n    }\n  }).filter(match => match) : [];\n\n  function navUp(i) {\n    return `#upc${i - 1}`;\n  }\n\n  function navDown(i) {\n    return `#upc${i + 1}`;\n  }\n\n  return matches ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: fixedMatches.map((match, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `upc${i}`,\n      className: \"upc\",\n      children: [/*#__PURE__*/_jsxDEV(Barcode, {\n        width: 3,\n        height: 500,\n        format: 'CODE128',\n        displayValue: false,\n        background: '#ffffff',\n        lineColor: '#000000',\n        margin: 10,\n        marginTop: undefined,\n        marginBottom: undefined,\n        marginLeft: undefined,\n        marginRight: undefined,\n        value: match\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: navUp(i),\n          children: \"up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: navDown(i),\n          children: \"down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"no matches found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Base64DecodeUrl\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js"],"names":["Barcode","text","re1","Base64DecodeUrl","str","slice","length","replace","letterToNumber","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","replaceLettersWithLikelyDigits","split","map","digit","isNaN","Number","console","log","join","App","queryString","window","location","search","urlParams","URLSearchParams","URLEncodedText","get","base64EncodedText","matches","match","fixedMatches","test","filter","navUp","i","navDown","width","height","format","displayValue","background","lineColor","margin","marginTop","undefined","marginBottom","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport Barcode from 'react-barcode'\nimport logo from './logo.svg'\nimport { text } from './text-sample'\n\nconst re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g\n\nfunction Base64DecodeUrl(str) {\n\tstr = str ? (str + '===').slice(0, str.length + (str.length % 4)) : ''\n\treturn str.replace(/-/g, '+').replace(/_/g, '/')\n}\n\nconst letterToNumber = {\n\tA: 8,\n\tB: 8,\n\tC: 0,\n\tD: 0,\n\tE: 8,\n\tF: 8,\n\tG: 0,\n\tH: 8,\n\tI: 1,\n\tJ: 0,\n\tK: 8,\n\tL: 1,\n\tM: 0,\n\tN: 8,\n\tO: 0,\n\tP: 2,\n\tQ: 0,\n\tR: 8,\n\tS: 5,\n\tT: 7,\n\tU: 0,\n\tV: 0,\n\tW: 0,\n\tX: 0,\n\tY: 1,\n\tZ: 0,\n}\n\nfunction replaceLettersWithLikelyDigits(str) {\n\treturn str\n\t\t.split('')\n\t\t.map((digit) => {\n\t\t\tif (isNaN(Number(digit))) {\n\t\t\t\tconsole.log(digit)\n\t\t\t\treturn letterToNumber[digit]\n\t\t\t} else return digit\n\t\t})\n\t\t.join('')\n}\n\nfunction App() {\n\tconst queryString = window.location.search\n\tconst urlParams = new URLSearchParams(queryString)\n\tconst URLEncodedText = urlParams.get('text')\n\tconst base64EncodedText = Base64DecodeUrl(URLEncodedText)\n\t// const text = atob(base64EncodedText)\n\tconst matches = text.match(re1)\n\tconst fixedMatches = matches\n\t\t? matches\n\t\t\t\t.map((match) => {\n\t\t\t\t\tif (match.length >= 12) {\n\t\t\t\t\t\tif (/\\d{12}/.test(match)) {\n\t\t\t\t\t\t\treturn match\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn replaceLettersWithLikelyDigits(match)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter((match) => match)\n\t\t: []\n\n\tfunction navUp(i) {\n\t\treturn `#upc${i - 1}`\n\t}\n\tfunction navDown(i) {\n\t\treturn `#upc${i + 1}`\n\t}\n\n\treturn matches ? (\n\t\t<div className='App'>\n\t\t\t{fixedMatches.map((match, i) => (\n\t\t\t\t<div key={i} id={`upc${i}`} className='upc'>\n\t\t\t\t\t<Barcode\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\twidth: 3,\n\t\t\t\t\t\t\theight: 500,\n\t\t\t\t\t\t\tformat: 'CODE128',\n\t\t\t\t\t\t\tdisplayValue: false,\n\t\t\t\t\t\t\tbackground: '#ffffff',\n\t\t\t\t\t\t\tlineColor: '#000000',\n\t\t\t\t\t\t\tmargin: 10,\n\t\t\t\t\t\t\tmarginTop: undefined,\n\t\t\t\t\t\t\tmarginBottom: undefined,\n\t\t\t\t\t\t\tmarginLeft: undefined,\n\t\t\t\t\t\t\tmarginRight: undefined,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={match}\n\t\t\t\t\t/>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<a href={navUp(i)}>up</a>\n\t\t\t\t\t\t<a href={navDown(i)}>down</a>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t) : (\n\t\t<h1>no matches found</h1>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}