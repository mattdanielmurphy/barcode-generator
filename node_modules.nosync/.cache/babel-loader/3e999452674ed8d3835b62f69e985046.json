{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Barcode from 'react-barcode';\nimport NumberPicker from './NumberPicker';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BarcodeContainer({\n  UPC,\n  index,\n  totalUPCs\n}) {\n  _s();\n\n  const [currentUPC, setCurrentUPC] = useState(() => {\n    return UPC;\n  });\n  const navUp = `#upc${index - 1}`;\n  const navDown = `#upc${index + 1}`;\n\n  function handleChange(e) {\n    setCurrentUPC(e.target.value);\n  }\n\n  function reset() {\n    setCurrentUPC(UPC);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `upc${index}`,\n    className: \"upc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [index + 1, \" of \", totalUPCs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Barcode, {\n      width: 3,\n      height: 400,\n      format: 'CODE128',\n      displayValue: false,\n      background: '#ffffff',\n      lineColor: '#000000',\n      margin: 10,\n      value: currentUPC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NumberPicker, {\n      value: currentUPC,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: `#upc${index}`,\n        onClick: reset,\n        children: \"reset code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: navUp,\n        children: \"up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: navDown,\n        children: \"down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BarcodeContainer, \"RwXLpYditOGQoljcCiQQwM4K0bc=\");\n\n_c = BarcodeContainer;\n\nfunction App() {\n  _s2();\n\n  const [text, setText] = useState('');\n  const [UPCs, setUPCs] = useState([]);\n\n  async function getTextFromDatabase() {\n    // const { data } = await axios.get('https://barcode-generator-beta.vercel.app/api/text')\n    const data = {\n      text: `068258002405\n\t\t681131911955\n\t\t67495900008\n\t\t681131911962\n\t\t67495900009\n\t\t67495900010\n\t\t67495900006\n\t\t67495900002\n\t\t67495900003\n\t\t67495900012\n\t\t68258618422\n\t\t068258618309\n\t\t067495900022`\n    };\n    return data.text;\n  }\n\n  useEffect(() => {\n    async function getText() {\n      const text = await getTextFromDatabase();\n      setText(text);\n\n      function filterScannedText() {\n        // const re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g\n        const re1 = /[1-9]\\d{10}/g;\n        const matches = text.match(re1);\n        return matches;\n      }\n\n      setUPCs(filterScannedText());\n    }\n\n    getText();\n  }, []);\n  return UPCs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [UPCs.map((match, i) => /*#__PURE__*/_jsxDEV(BarcodeContainer, {\n      totalUPCs: UPCs.length,\n      UPC: match,\n      index: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scan-more\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: \"shortcuts://run-shortcut?name=Scan%20Barcodes\",\n        children: \"Scan More UPCs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this) : text ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no matches found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"raw data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s2(App, \"QitrX2KELxxg8JvGTkDx3TOG+dA=\");\n\n_c2 = App;\nexport default App; // const letterToNumber = {\n// \tA: 8,\n// \tB: 8,\n// \tC: 0,\n// \tD: 0,\n// \tE: 8,\n// \tF: 8,\n// \tG: 0,\n// \tH: 8,\n// \tI: 1,\n// \tJ: 0,\n// \tK: 8,\n// \tL: 1,\n// \tM: 0,\n// \tN: 8,\n// \tO: 0,\n// \tP: 2,\n// \tQ: 0,\n// \tR: 8,\n// \tS: 5,\n// \tT: 7,\n// \tU: 0,\n// \tV: 0,\n// \tW: 0,\n// \tX: 0,\n// \tY: 1,\n// \tZ: 0,\n// }\n// function replaceLettersWithLikelyDigits(str) {\n// \treturn str\n// \t\t.split('')\n// \t\t.map((digit) => {\n// \t\t\tif (isNaN(Number(digit))) {\n// \t\t\t\tconsole.log(digit)\n// \t\t\t\treturn letterToNumber[digit]\n// \t\t\t} else return digit\n// \t\t})\n// \t\t.join('')\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BarcodeContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js"],"names":["useEffect","useState","Barcode","NumberPicker","axios","BarcodeContainer","UPC","index","totalUPCs","currentUPC","setCurrentUPC","navUp","navDown","handleChange","e","target","value","reset","width","height","format","displayValue","background","lineColor","margin","App","text","setText","UPCs","setUPCs","getTextFromDatabase","data","getText","filterScannedText","re1","matches","match","length","map","i"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport { useEffect, useState } from 'react'\n\nimport Barcode from 'react-barcode'\nimport NumberPicker from './NumberPicker'\nimport axios from 'axios'\n\nfunction BarcodeContainer({ UPC, index, totalUPCs }) {\n\tconst [currentUPC, setCurrentUPC] = useState(() => {\n\t\treturn UPC\n\t})\n\tconst navUp = `#upc${index - 1}`\n\tconst navDown = `#upc${index + 1}`\n\n\tfunction handleChange(e) {\n\t\tsetCurrentUPC(e.target.value)\n\t}\n\tfunction reset() {\n\t\tsetCurrentUPC(UPC)\n\t}\n\treturn (\n\t\t<div key={index} id={`upc${index}`} className='upc'>\n\t\t\t<h3>\n\t\t\t\t{index + 1} of {totalUPCs}\n\t\t\t</h3>\n\t\t\t<Barcode\n\t\t\t\t{...{\n\t\t\t\t\twidth: 3,\n\t\t\t\t\theight: 400,\n\t\t\t\t\tformat: 'CODE128',\n\t\t\t\t\tdisplayValue: false,\n\t\t\t\t\tbackground: '#ffffff',\n\t\t\t\t\tlineColor: '#000000',\n\t\t\t\t\tmargin: 10,\n\t\t\t\t}}\n\t\t\t\tvalue={currentUPC}\n\t\t\t/>\n\t\t\t<NumberPicker value={currentUPC} onChange={handleChange} />\n\t\t\t<nav>\n\t\t\t\t<a className='button' href={`#upc${index}`} onClick={reset}>\n\t\t\t\t\treset code\n\t\t\t\t</a>\n\t\t\t\t<a className='button' href={navUp}>\n\t\t\t\t\tup\n\t\t\t\t</a>\n\t\t\t\t<a className='button' href={navDown}>\n\t\t\t\t\tdown\n\t\t\t\t</a>\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n\nfunction App() {\n\tconst [text, setText] = useState('')\n\tconst [UPCs, setUPCs] = useState([])\n\n\tasync function getTextFromDatabase() {\n\t\t// const { data } = await axios.get('https://barcode-generator-beta.vercel.app/api/text')\n\t\tconst data = {\n\t\t\ttext: `068258002405\n\t\t681131911955\n\t\t67495900008\n\t\t681131911962\n\t\t67495900009\n\t\t67495900010\n\t\t67495900006\n\t\t67495900002\n\t\t67495900003\n\t\t67495900012\n\t\t68258618422\n\t\t068258618309\n\t\t067495900022`,\n\t\t}\n\t\treturn data.text\n\t}\n\n\tuseEffect(() => {\n\t\tasync function getText() {\n\t\t\tconst text = await getTextFromDatabase()\n\t\t\tsetText(text)\n\t\t\tfunction filterScannedText() {\n\t\t\t\t// const re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g\n\t\t\t\tconst re1 = /[1-9]\\d{10}/g\n\t\t\t\tconst matches = text.match(re1)\n\t\t\t\treturn matches\n\t\t\t}\n\t\t\tsetUPCs(filterScannedText())\n\t\t}\n\t\tgetText()\n\t}, [])\n\n\treturn UPCs.length > 0 ? (\n\t\t<div className='App'>\n\t\t\t{UPCs.map((match, i) => (\n\t\t\t\t<BarcodeContainer\n\t\t\t\t\ttotalUPCs={UPCs.length}\n\t\t\t\t\tUPC={match}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tindex={i}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<p className='scan-more'>\n\t\t\t\t<a\n\t\t\t\t\tclassName='button'\n\t\t\t\t\thref='shortcuts://run-shortcut?name=Scan%20Barcodes'\n\t\t\t\t>\n\t\t\t\t\tScan More UPCs\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</div>\n\t) : text ? (\n\t\t<>\n\t\t\t<h1>no matches found</h1>\n\t\t\t<div>raw data:</div>\n\t\t\t<div>{text}</div>\n\t\t</>\n\t) : (\n\t\t<></>\n\t)\n}\n\nexport default App\n\n// const letterToNumber = {\n// \tA: 8,\n// \tB: 8,\n// \tC: 0,\n// \tD: 0,\n// \tE: 8,\n// \tF: 8,\n// \tG: 0,\n// \tH: 8,\n// \tI: 1,\n// \tJ: 0,\n// \tK: 8,\n// \tL: 1,\n// \tM: 0,\n// \tN: 8,\n// \tO: 0,\n// \tP: 2,\n// \tQ: 0,\n// \tR: 8,\n// \tS: 5,\n// \tT: 7,\n// \tU: 0,\n// \tV: 0,\n// \tW: 0,\n// \tX: 0,\n// \tY: 1,\n// \tZ: 0,\n// }\n\n// function replaceLettersWithLikelyDigits(str) {\n// \treturn str\n// \t\t.split('')\n// \t\t.map((digit) => {\n// \t\t\tif (isNaN(Number(digit))) {\n// \t\t\t\tconsole.log(digit)\n// \t\t\t\treturn letterToNumber[digit]\n// \t\t\t} else return digit\n// \t\t})\n// \t\t.join('')\n// }\n"]},"metadata":{},"sourceType":"module"}