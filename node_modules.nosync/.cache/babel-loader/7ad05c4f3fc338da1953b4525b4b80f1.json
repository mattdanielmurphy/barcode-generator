{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/NumberPicker.jsx\";\nimport 'react-number-picker/dist/style.css';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n\tdisplay: flex;\n`;\n_c = Container;\n\nfunction NumberPicker({\n  currentUPC,\n  setCurrentUPC\n}) {\n  function handleChange(e) {\n    const {\n      value,\n      index\n    } = e.target.value;\n    let newUPC = currentUPC.substring(0, index) + value + currentUPC.substring(index + 1);\n    setCurrentUPC(newUPC);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: currentUPC.split('').map((digit, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n      value: {\n        value: digit,\n        index: i\n      },\n      type: \"number\",\n      onChange: handleChange\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = NumberPicker;\nexport default NumberPicker;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"NumberPicker\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/NumberPicker.jsx"],"names":["React","styled","Container","div","NumberPicker","currentUPC","setCurrentUPC","handleChange","e","value","index","target","newUPC","substring","split","map","digit","i"],"mappings":";AAAA,OAAO,oCAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA,CAFA;KAAMD,S;;AAIN,SAASE,YAAT,CAAsB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAtB,EAAqD;AACpD,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACxB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBF,CAAC,CAACG,MAAF,CAASF,KAAlC;AACA,QAAIG,MAAM,GACTP,UAAU,CAACQ,SAAX,CAAqB,CAArB,EAAwBH,KAAxB,IAAiCD,KAAjC,GAAyCJ,UAAU,CAACQ,SAAX,CAAqBH,KAAK,GAAG,CAA7B,CAD1C;AAEAJ,IAAAA,aAAa,CAACM,MAAD,CAAb;AACA;;AAED,sBACC,QAAC,SAAD;AAAA,cACEP,UAAU,CAACS,KAAX,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,CAACC,KAAD,EAAQC,CAAR,kBACzB;AAEC,MAAA,KAAK,EAAE;AAAER,QAAAA,KAAK,EAAEO,KAAT;AAAgBN,QAAAA,KAAK,EAAEO;AAAvB,OAFR;AAGC,MAAA,IAAI,EAAC,QAHN;AAIC,MAAA,QAAQ,EAAEV;AAJX,OACMU,CADN;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;MApBQb,Y;AAsBT,eAAeA,YAAf","sourcesContent":["import 'react-number-picker/dist/style.css'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n\tdisplay: flex;\n`\n\nfunction NumberPicker({ currentUPC, setCurrentUPC }) {\n\tfunction handleChange(e) {\n\t\tconst { value, index } = e.target.value\n\t\tlet newUPC =\n\t\t\tcurrentUPC.substring(0, index) + value + currentUPC.substring(index + 1)\n\t\tsetCurrentUPC(newUPC)\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t{currentUPC.split('').map((digit, i) => (\n\t\t\t\t<input\n\t\t\t\t\tkey={i}\n\t\t\t\t\tvalue={{ value: digit, index: i }}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Container>\n\t)\n}\n\nexport default NumberPicker\n"]},"metadata":{},"sourceType":"module"}