{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/PasteArea.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textarea = {\n  width: '300px',\n  height: '400px'\n};\nexport const PasteArea = ({\n  setText\n}) => {\n  let results = [];\n\n  async function getClipboard(event) {\n    let items = await navigator.clipboard.read();\n\n    for (let item of items) {\n      console.log('item', item);\n      if (!item.types.includes('text/html')) continue;\n      let reader = new FileReader();\n      reader.addEventListener('load', loadEvent => {\n        console.log('result', reader.result);\n        results.push(reader.result);\n      });\n      results.push(reader.readAsText(await item.getType('text/html')));\n      break;\n    }\n  }\n\n  console.log(results); // if (text) {\n  // \tif (typeof text === 'string') setText(text)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: getClipboard,\n    children: \"Click to paste your clipboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = PasteArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasteArea\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/PasteArea.js"],"names":["Textarea","width","height","PasteArea","setText","results","getClipboard","event","items","navigator","clipboard","read","item","console","log","types","includes","reader","FileReader","addEventListener","loadEvent","result","push","readAsText","getType"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAjB;AAKA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,MAAIC,OAAO,GAAG,EAAd;;AACA,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AAClC,QAAIC,KAAK,GAAG,MAAMC,SAAS,CAACC,SAAV,CAAoBC,IAApB,EAAlB;;AACA,SAAK,IAAIC,IAAT,IAAiBJ,KAAjB,EAAwB;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,UAAI,CAACA,IAAI,CAACG,KAAL,CAAWC,QAAX,CAAoB,WAApB,CAAL,EAAuC;AACvC,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAiCC,SAAD,IAAe;AAC9CP,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,MAAM,CAACI,MAA7B;AACAhB,QAAAA,OAAO,CAACiB,IAAR,CAAaL,MAAM,CAACI,MAApB;AACA,OAHD;AAIAhB,MAAAA,OAAO,CAACiB,IAAR,CAAaL,MAAM,CAACM,UAAP,CAAkB,MAAMX,IAAI,CAACY,OAAL,CAAa,WAAb,CAAxB,CAAb;AACA;AACA;AACD;;AACDX,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ,EAhByC,CAiBzC;AACA;AACA;;AAEA,sBAAO;AAAQ,IAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAtBM;KAAMH,S","sourcesContent":["const Textarea = {\n\twidth: '300px',\n\theight: '400px',\n}\n\nexport const PasteArea = ({ setText }) => {\n\tlet results = []\n\tasync function getClipboard(event) {\n\t\tlet items = await navigator.clipboard.read()\n\t\tfor (let item of items) {\n\t\t\tconsole.log('item', item)\n\t\t\tif (!item.types.includes('text/html')) continue\n\t\t\tlet reader = new FileReader()\n\t\t\treader.addEventListener('load', (loadEvent) => {\n\t\t\t\tconsole.log('result', reader.result)\n\t\t\t\tresults.push(reader.result)\n\t\t\t})\n\t\t\tresults.push(reader.readAsText(await item.getType('text/html')))\n\t\t\tbreak\n\t\t}\n\t}\n\tconsole.log(results)\n\t// if (text) {\n\t// \tif (typeof text === 'string') setText(text)\n\t// }\n\n\treturn <button onClick={getClipboard}>Click to paste your clipboard</button>\n}\n"]},"metadata":{},"sourceType":"module"}