{"ast":null,"code":"'use strict';\n\nvar packageJson = require('../../package.json');\n\nconst {\n  getBrowserOsDetails\n} = require('../_util');\n\nvar util = require('../_util');\n\nvar errors = require('./errors');\n/**\n * The driver's internal HTTP client.\n *\n * @constructor\n * @param {Object} options Same as the {@link Client} options.\n * @private\n */\n\n\nfunction HttpClient(options) {\n  var isHttps = options.scheme === 'https'; // If the port is a falsy value - replace it with default one.\n\n  if (!options.port) {\n    options.port = isHttps ? 443 : 80;\n  } // HTTP2 adapter is applicable only if it's NodeJS env and\n  // no fetch API override provided (to preserve backward-compatibility).\n\n\n  var useHttp2Adapter = !options.fetch && util.isNodeEnv() && isHttp2Supported();\n  this._adapter = useHttp2Adapter ? new (require('./http2Adapter'))({\n    http2SessionIdleTime: options.http2SessionIdleTime\n  }) : new (require('./fetchAdapter'))({\n    isHttps: isHttps,\n    fetch: options.fetch,\n    keepAlive: options.keepAlive\n  });\n  this._baseUrl = options.scheme + '://' + options.domain + ':' + options.port;\n  this._secret = options.secret;\n  this._headers = Object.assign({}, options.headers, getDefaultHeaders());\n  this._queryTimeout = options.queryTimeout;\n  this._lastSeen = null;\n  this._timeout = Math.floor(options.timeout * 1000);\n}\n/**\n * Returns last seen transaction time.\n *\n * @returns {number} The last seen transaction time.\n */\n\n\nHttpClient.prototype.getLastTxnTime = function () {\n  return this._lastSeen;\n};\n/**\n * Sets the last seen transaction if the given timestamp is greater than then\n * know last seen timestamp.\n *\n * @param {number} time transaction timestamp.\n */\n\n\nHttpClient.prototype.syncLastTxnTime = function (time) {\n  if (this._lastSeen == null || this._lastSeen < time) {\n    this._lastSeen = time;\n  }\n};\n/**\n * Executes an HTTP request.\n *\n * @param {?object} options Request parameters.\n * @param {?string} options.method Request method.\n * @param {?string} options.path Request path.\n * @param {?string} options.body Request body.\n * @param {?object} options.query Request query.\n * @params {?object} options.streamConsumer Stream consumer, if presented\n * the request will be \"streamed\" into streamConsumer.onData function.\n * @params {function} options.streamConsumer.onData Function called with a chunk of data.\n * @params {function} options.streamConsumer.onError Function called\n * when an error occurred.\n * when the stream is ended.\n * @param {?object} options.signal Abort signal object.\n * @param {?object} options.fetch Fetch API compatible function.\n * @param {?object} options.secret FaunaDB secret.\n * @param {?object} options.queryTimeout FaunaDB query timeout.\n * @returns {Promise} The response promise.\n */\n\n\nHttpClient.prototype.execute = function (options) {\n  options = options || {};\n  var invalidStreamConsumer = options.streamConsumer && (typeof options.streamConsumer.onData !== 'function' || typeof options.streamConsumer.onError !== 'function');\n\n  if (invalidStreamConsumer) {\n    return Promise.reject(new TypeError('Invalid \"streamConsumer\" provided'));\n  }\n\n  var secret = options.secret || this._secret;\n  var queryTimeout = options.queryTimeout || this._queryTimeout;\n  var headers = this._headers;\n  headers['Authorization'] = secret && secretHeader(secret);\n  headers['X-Last-Seen-Txn'] = this._lastSeen;\n  headers['X-Query-Timeout'] = queryTimeout;\n  return this._adapter.execute({\n    origin: this._baseUrl,\n    path: options.path || '/',\n    query: options.query,\n    method: options.method || 'GET',\n    headers: util.removeNullAndUndefinedValues(headers),\n    body: options.body,\n    signal: options.signal,\n    timeout: this._timeout,\n    streamConsumer: options.streamConsumer\n  });\n};\n\nfunction secretHeader(secret) {\n  return 'Bearer ' + secret;\n}\n/** @ignore */\n\n\nfunction getDefaultHeaders() {\n  var driverEnv = {\n    driver: ['javascript', packageJson.version].join('-')\n  };\n  var isServiceWorker;\n\n  try {\n    isServiceWorker = global instanceof ServiceWorkerGlobalScope;\n  } catch (error) {\n    isServiceWorker = false;\n  }\n\n  try {\n    if (util.isNodeEnv()) {\n      driverEnv.runtime = ['nodejs', process.version].join('-');\n      driverEnv.env = util.getNodeRuntimeEnv();\n\n      var os = require('os');\n\n      driverEnv.os = [os.platform(), os.release()].join('-');\n    } else if (isServiceWorker) {\n      driverEnv.runtime = 'Service Worker';\n    } else {\n      driverEnv.runtime = util.getBrowserDetails();\n      driverEnv.env = 'browser';\n      driverEnv.os = getBrowserOsDetails();\n    }\n  } catch (_) {}\n\n  var headers = {\n    'X-FaunaDB-API-Version': packageJson.apiVersion\n  }; // TODO: api cors must be enabled to accept header X-Driver-Env\n\n  if (util.isNodeEnv()) {\n    headers['X-Driver-Env'] = Object.keys(driverEnv).map(key => [key, driverEnv[key].toLowerCase()].join('=')).join('; ');\n  }\n\n  return headers;\n}\n\nfunction isHttp2Supported() {\n  try {\n    require('http2');\n\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nmodule.exports = {\n  HttpClient: HttpClient,\n  TimeoutError: errors.TimeoutError,\n  AbortError: errors.AbortError\n};","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/node_modules/faunadb/src/_http/index.js"],"names":["packageJson","require","getBrowserOsDetails","util","errors","HttpClient","options","isHttps","scheme","port","useHttp2Adapter","fetch","isNodeEnv","isHttp2Supported","_adapter","http2SessionIdleTime","keepAlive","_baseUrl","domain","_secret","secret","_headers","Object","assign","headers","getDefaultHeaders","_queryTimeout","queryTimeout","_lastSeen","_timeout","Math","floor","timeout","prototype","getLastTxnTime","syncLastTxnTime","time","execute","invalidStreamConsumer","streamConsumer","onData","onError","Promise","reject","TypeError","secretHeader","origin","path","query","method","removeNullAndUndefinedValues","body","signal","driverEnv","driver","version","join","isServiceWorker","global","ServiceWorkerGlobalScope","error","runtime","process","env","getNodeRuntimeEnv","os","platform","release","getBrowserDetails","_","apiVersion","keys","map","key","toLowerCase","module","exports","TimeoutError","AbortError"],"mappings":"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","sourcesContent":["'use strict'\nvar packageJson = require('../../package.json')\nconst { getBrowserOsDetails } = require('../_util')\nvar util = require('../_util')\nvar errors = require('./errors')\n\n/**\n * The driver's internal HTTP client.\n *\n * @constructor\n * @param {Object} options Same as the {@link Client} options.\n * @private\n */\nfunction HttpClient(options) {\n  var isHttps = options.scheme === 'https'\n\n  // If the port is a falsy value - replace it with default one.\n  if (!options.port) {\n    options.port = isHttps ? 443 : 80\n  }\n\n  // HTTP2 adapter is applicable only if it's NodeJS env and\n  // no fetch API override provided (to preserve backward-compatibility).\n  var useHttp2Adapter = !options.fetch && util.isNodeEnv() && isHttp2Supported()\n\n  this._adapter = useHttp2Adapter\n    ? new (require('./http2Adapter'))({\n        http2SessionIdleTime: options.http2SessionIdleTime,\n      })\n    : new (require('./fetchAdapter'))({\n        isHttps: isHttps,\n        fetch: options.fetch,\n        keepAlive: options.keepAlive,\n      })\n  this._baseUrl = options.scheme + '://' + options.domain + ':' + options.port\n  this._secret = options.secret\n  this._headers = Object.assign({}, options.headers, getDefaultHeaders())\n  this._queryTimeout = options.queryTimeout\n  this._lastSeen = null\n  this._timeout = Math.floor(options.timeout * 1000)\n}\n\n/**\n * Returns last seen transaction time.\n *\n * @returns {number} The last seen transaction time.\n */\nHttpClient.prototype.getLastTxnTime = function() {\n  return this._lastSeen\n}\n\n/**\n * Sets the last seen transaction if the given timestamp is greater than then\n * know last seen timestamp.\n *\n * @param {number} time transaction timestamp.\n */\nHttpClient.prototype.syncLastTxnTime = function(time) {\n  if (this._lastSeen == null || this._lastSeen < time) {\n    this._lastSeen = time\n  }\n}\n\n/**\n * Executes an HTTP request.\n *\n * @param {?object} options Request parameters.\n * @param {?string} options.method Request method.\n * @param {?string} options.path Request path.\n * @param {?string} options.body Request body.\n * @param {?object} options.query Request query.\n * @params {?object} options.streamConsumer Stream consumer, if presented\n * the request will be \"streamed\" into streamConsumer.onData function.\n * @params {function} options.streamConsumer.onData Function called with a chunk of data.\n * @params {function} options.streamConsumer.onError Function called\n * when an error occurred.\n * when the stream is ended.\n * @param {?object} options.signal Abort signal object.\n * @param {?object} options.fetch Fetch API compatible function.\n * @param {?object} options.secret FaunaDB secret.\n * @param {?object} options.queryTimeout FaunaDB query timeout.\n * @returns {Promise} The response promise.\n */\nHttpClient.prototype.execute = function(options) {\n  options = options || {}\n\n  var invalidStreamConsumer =\n    options.streamConsumer &&\n    (typeof options.streamConsumer.onData !== 'function' ||\n      typeof options.streamConsumer.onError !== 'function')\n\n  if (invalidStreamConsumer) {\n    return Promise.reject(new TypeError('Invalid \"streamConsumer\" provided'))\n  }\n\n  var secret = options.secret || this._secret\n  var queryTimeout = options.queryTimeout || this._queryTimeout\n  var headers = this._headers\n\n  headers['Authorization'] = secret && secretHeader(secret)\n  headers['X-Last-Seen-Txn'] = this._lastSeen\n  headers['X-Query-Timeout'] = queryTimeout\n\n  return this._adapter.execute({\n    origin: this._baseUrl,\n    path: options.path || '/',\n    query: options.query,\n    method: options.method || 'GET',\n    headers: util.removeNullAndUndefinedValues(headers),\n    body: options.body,\n    signal: options.signal,\n    timeout: this._timeout,\n    streamConsumer: options.streamConsumer,\n  })\n}\n\nfunction secretHeader(secret) {\n  return 'Bearer ' + secret\n}\n\n/** @ignore */\nfunction getDefaultHeaders() {\n  var driverEnv = {\n    driver: ['javascript', packageJson.version].join('-'),\n  }\n\n  var isServiceWorker\n\n  try {\n    isServiceWorker = global instanceof ServiceWorkerGlobalScope\n  } catch (error) {\n    isServiceWorker = false\n  }\n\n  try {\n    if (util.isNodeEnv()) {\n      driverEnv.runtime = ['nodejs', process.version].join('-')\n      driverEnv.env = util.getNodeRuntimeEnv()\n      var os = require('os')\n      driverEnv.os = [os.platform(), os.release()].join('-')\n    } else if (isServiceWorker) {\n      driverEnv.runtime = 'Service Worker'\n    } else {\n      driverEnv.runtime = util.getBrowserDetails()\n      driverEnv.env = 'browser'\n      driverEnv.os = getBrowserOsDetails()\n    }\n  } catch (_) {}\n\n  var headers = {\n    'X-FaunaDB-API-Version': packageJson.apiVersion,\n  }\n\n  // TODO: api cors must be enabled to accept header X-Driver-Env\n  if (util.isNodeEnv()) {\n    headers['X-Driver-Env'] = Object.keys(driverEnv)\n      .map(key => [key, driverEnv[key].toLowerCase()].join('='))\n      .join('; ')\n  }\n  return headers\n}\n\nfunction isHttp2Supported() {\n  try {\n    require('http2')\n\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nmodule.exports = {\n  HttpClient: HttpClient,\n  TimeoutError: errors.TimeoutError,\n  AbortError: errors.AbortError,\n}\n"]},"metadata":{},"sourceType":"script"}