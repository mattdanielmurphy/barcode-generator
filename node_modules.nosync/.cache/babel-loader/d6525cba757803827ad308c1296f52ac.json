{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/Generator.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Barcode from 'react-barcode';\nimport NumberPicker from './NumberPicker';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst localHostnames = ['192.168.1.1', 'localhost'];\nconst appURL = 'https://barcode-generator-beta.vercel.app/api/text';\n\nfunction BarcodeContainer({\n  UPC,\n  index,\n  totalUPCs,\n  signInCodes,\n  barcodeOptions\n}) {\n  _s();\n\n  const [currentUPC, setCurrentUPC] = useState(() => {\n    return UPC;\n  });\n  const c = signInCodes ? 'signIn' : 'upc';\n  const navUp = `#${c}${index - 1}`;\n  const navDown = signInCodes && index === 1 ? `#upc0` : `#${c}${index + 1}`;\n\n  function reset() {\n    setCurrentUPC(UPC);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `${c}${index}`,\n    className: \"upc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [signInCodes && 'Sign-In Codes: ', index + 1, \" of \", totalUPCs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Barcode, {\n      width: 3,\n      height: 400,\n      displayValue: false,\n      margin: 10,\n      ...barcodeOptions,\n      value: currentUPC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /^\\d*$/.test(currentUPC) && /*#__PURE__*/_jsxDEV(NumberPicker, {\n      currentUPC: currentUPC,\n      setCurrentUPC: setCurrentUPC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [signInCodes ? /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: `#upc0`,\n        children: \"skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: `#${c}${index}`,\n        onClick: reset,\n        children: \"reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"up-down-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"button\",\n          href: navUp,\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"button\",\n          href: navDown,\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BarcodeContainer, \"RwXLpYditOGQoljcCiQQwM4K0bc=\");\n\n_c = BarcodeContainer;\n\nfunction SignInCodes() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BarcodeContainer, {\n      totalUPCs: 2,\n      UPC: process.env.REACT_APP_USER,\n      index: 0,\n      signInCodes: true,\n      barcodeOptions: {\n        lineColor: 'firebrick'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BarcodeContainer, {\n      totalUPCs: 2,\n      UPC: process.env.REACT_APP_PASS,\n      index: 1,\n      signInCodes: true,\n      barcodeOptions: {\n        lineColor: 'firebrick'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = SignInCodes;\n\nfunction Generator() {\n  _s2();\n\n  const [text, setText] = useState('');\n  const [UPCs, setUPCs] = useState([]);\n\n  async function getTextFromDatabase() {\n    if (localHostnames.includes(window.location.hostname)) {\n      return `068258002405:681131911955:67495900008:681131911962:67495900009:67495900010:67495900006:67495900002\n67495900003:67495900012:68258618422:068258618309:067495900022`.split(':').join('\\n');\n    } else {\n      return await axios.get(appURL);\n    }\n  }\n\n  useEffect(() => {\n    async function getText() {\n      const text = await getTextFromDatabase();\n      setText(text);\n\n      function filterScannedText() {\n        const elevenTo12Digits = /[\\d\\w]{11,12}/g;\n        const matches = text.match(elevenTo12Digits).map(match => {\n          if (/^\\d.$/.test(match)) return match;else return replaceLettersWithLikelyDigits(match);\n        }).map(match => {\n          console.log('mat', match);\n          const newMatch = match.replace(/^0/, '');\n          console.log(newMatch);\n          return /^\\d{11}/.exec(newMatch)[0];\n        }); // const re1 = /[1-9]\\d{10}/g\n        // const matches = text.match(re1)\n\n        return matches;\n      }\n\n      setUPCs(filterScannedText());\n    }\n\n    getText();\n  }, []);\n  return UPCs.length > 0 ? /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SignInCodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this), UPCs.map((match, i) => /*#__PURE__*/_jsxDEV(BarcodeContainer, {\n      totalUPCs: UPCs.length,\n      UPC: match,\n      index: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scan-more\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: \"shortcuts://run-shortcut?name=Scan%20Barcodes\",\n        children: \"Scan More UPCs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 3\n  }, this) : text ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no matches found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"raw data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s2(Generator, \"QitrX2KELxxg8JvGTkDx3TOG+dA=\");\n\n_c3 = Generator;\nexport default Generator;\nconst Container = styled.div`\n\tmargin: 3em auto;\n`;\n_c4 = Container;\nconst letterToNumber = {\n  A: 8,\n  B: 8,\n  C: 0,\n  D: 0,\n  E: 8,\n  F: 8,\n  G: 0,\n  H: 8,\n  I: 1,\n  J: 0,\n  K: 8,\n  L: 1,\n  M: 0,\n  N: 8,\n  O: 0,\n  P: 2,\n  Q: 0,\n  R: 8,\n  S: 5,\n  T: 7,\n  U: 0,\n  V: 0,\n  W: 0,\n  X: 0,\n  Y: 1,\n  Z: 0\n};\n\nfunction replaceLettersWithLikelyDigits(str) {\n  return str.split('').map(digit => {\n    if (isNaN(Number(digit))) {\n      console.log(digit);\n      return letterToNumber[digit];\n    } else return digit;\n  }).join('');\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BarcodeContainer\");\n$RefreshReg$(_c2, \"SignInCodes\");\n$RefreshReg$(_c3, \"Generator\");\n$RefreshReg$(_c4, \"Container\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/Generator.jsx"],"names":["useEffect","useState","Barcode","NumberPicker","axios","styled","require","config","localHostnames","appURL","BarcodeContainer","UPC","index","totalUPCs","signInCodes","barcodeOptions","currentUPC","setCurrentUPC","c","navUp","navDown","reset","width","height","displayValue","margin","test","SignInCodes","process","env","REACT_APP_USER","lineColor","REACT_APP_PASS","Generator","text","setText","UPCs","setUPCs","getTextFromDatabase","includes","window","location","hostname","split","join","get","getText","filterScannedText","elevenTo12Digits","matches","match","map","replaceLettersWithLikelyDigits","console","log","newMatch","replace","exec","length","i","Container","div","letterToNumber","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","str","digit","isNaN","Number"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport Barcode from 'react-barcode'\nimport NumberPicker from './NumberPicker'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nrequire('dotenv').config()\n\nconst localHostnames = ['192.168.1.1', 'localhost']\nconst appURL = 'https://barcode-generator-beta.vercel.app/api/text'\n\nfunction BarcodeContainer({\n\tUPC,\n\tindex,\n\ttotalUPCs,\n\tsignInCodes,\n\tbarcodeOptions,\n}) {\n\tconst [currentUPC, setCurrentUPC] = useState(() => {\n\t\treturn UPC\n\t})\n\tconst c = signInCodes ? 'signIn' : 'upc'\n\tconst navUp = `#${c}${index - 1}`\n\tconst navDown = signInCodes && index === 1 ? `#upc0` : `#${c}${index + 1}`\n\n\tfunction reset() {\n\t\tsetCurrentUPC(UPC)\n\t}\n\treturn (\n\t\t<div key={index} id={`${c}${index}`} className='upc'>\n\t\t\t<h3>\n\t\t\t\t{signInCodes && 'Sign-In Codes: '}\n\t\t\t\t{index + 1} of {totalUPCs}\n\t\t\t</h3>\n\t\t\t<Barcode\n\t\t\t\t{...{\n\t\t\t\t\twidth: 3,\n\t\t\t\t\theight: 400,\n\t\t\t\t\tdisplayValue: false,\n\t\t\t\t\tmargin: 10,\n\t\t\t\t\t...barcodeOptions,\n\t\t\t\t}}\n\t\t\t\tvalue={currentUPC}\n\t\t\t/>\n\t\t\t{/^\\d*$/.test(currentUPC) && (\n\t\t\t\t<NumberPicker currentUPC={currentUPC} setCurrentUPC={setCurrentUPC} />\n\t\t\t)}\n\t\t\t<nav>\n\t\t\t\t{signInCodes ? (\n\t\t\t\t\t<a className='button' href={`#upc0`}>\n\t\t\t\t\t\tskip\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<a className='button' href={`#${c}${index}`} onClick={reset}>\n\t\t\t\t\t\treset\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t<div className='up-down-nav'>\n\t\t\t\t\t<a className='button' href={navUp}>\n\t\t\t\t\t\t▲\n\t\t\t\t\t</a>\n\t\t\t\t\t<a className='button' href={navDown}>\n\t\t\t\t\t\t▼\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n\nfunction SignInCodes() {\n\treturn (\n\t\t<>\n\t\t\t<BarcodeContainer\n\t\t\t\ttotalUPCs={2}\n\t\t\t\tUPC={process.env.REACT_APP_USER}\n\t\t\t\tindex={0}\n\t\t\t\tsignInCodes\n\t\t\t\tbarcodeOptions={{ lineColor: 'firebrick' }}\n\t\t\t/>\n\t\t\t<BarcodeContainer\n\t\t\t\ttotalUPCs={2}\n\t\t\t\tUPC={process.env.REACT_APP_PASS}\n\t\t\t\tindex={1}\n\t\t\t\tsignInCodes\n\t\t\t\tbarcodeOptions={{ lineColor: 'firebrick' }}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nfunction Generator() {\n\tconst [text, setText] = useState('')\n\tconst [UPCs, setUPCs] = useState([])\n\n\tasync function getTextFromDatabase() {\n\t\tif (localHostnames.includes(window.location.hostname)) {\n\t\t\treturn `068258002405:681131911955:67495900008:681131911962:67495900009:67495900010:67495900006:67495900002\n67495900003:67495900012:68258618422:068258618309:067495900022`\n\t\t\t\t.split(':')\n\t\t\t\t.join('\\n')\n\t\t} else {\n\t\t\treturn await axios.get(appURL)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tasync function getText() {\n\t\t\tconst text = await getTextFromDatabase()\n\t\t\tsetText(text)\n\t\t\tfunction filterScannedText() {\n\t\t\t\tconst elevenTo12Digits = /[\\d\\w]{11,12}/g\n\t\t\t\tconst matches = text\n\t\t\t\t\t.match(elevenTo12Digits)\n\t\t\t\t\t.map((match) => {\n\t\t\t\t\t\tif (/^\\d.$/.test(match)) return match\n\t\t\t\t\t\telse return replaceLettersWithLikelyDigits(match)\n\t\t\t\t\t})\n\t\t\t\t\t.map((match) => {\n\t\t\t\t\t\tconsole.log('mat', match)\n\t\t\t\t\t\tconst newMatch = match.replace(/^0/, '')\n\t\t\t\t\t\tconsole.log(newMatch)\n\t\t\t\t\t\treturn /^\\d{11}/.exec(newMatch)[0]\n\t\t\t\t\t})\n\t\t\t\t// const re1 = /[1-9]\\d{10}/g\n\t\t\t\t// const matches = text.match(re1)\n\t\t\t\treturn matches\n\t\t\t}\n\t\t\tsetUPCs(filterScannedText())\n\t\t}\n\t\tgetText()\n\t}, [])\n\n\treturn UPCs.length > 0 ? (\n\t\t<Container>\n\t\t\t<SignInCodes />\n\t\t\t{UPCs.map((match, i) => (\n\t\t\t\t<BarcodeContainer\n\t\t\t\t\ttotalUPCs={UPCs.length}\n\t\t\t\t\tUPC={match}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tindex={i}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<p className='scan-more'>\n\t\t\t\t<a\n\t\t\t\t\tclassName='button'\n\t\t\t\t\thref='shortcuts://run-shortcut?name=Scan%20Barcodes'\n\t\t\t\t>\n\t\t\t\t\tScan More UPCs\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</Container>\n\t) : text ? (\n\t\t<>\n\t\t\t<h1>no matches found</h1>\n\t\t\t<div>raw data:</div>\n\t\t\t<div>{text}</div>\n\t\t</>\n\t) : (\n\t\t<></>\n\t)\n}\n\nexport default Generator\n\nconst Container = styled.div`\n\tmargin: 3em auto;\n`\n\nconst letterToNumber = {\n\tA: 8,\n\tB: 8,\n\tC: 0,\n\tD: 0,\n\tE: 8,\n\tF: 8,\n\tG: 0,\n\tH: 8,\n\tI: 1,\n\tJ: 0,\n\tK: 8,\n\tL: 1,\n\tM: 0,\n\tN: 8,\n\tO: 0,\n\tP: 2,\n\tQ: 0,\n\tR: 8,\n\tS: 5,\n\tT: 7,\n\tU: 0,\n\tV: 0,\n\tW: 0,\n\tX: 0,\n\tY: 1,\n\tZ: 0,\n}\n\nfunction replaceLettersWithLikelyDigits(str) {\n\treturn str\n\t\t.split('')\n\t\t.map((digit) => {\n\t\t\tif (isNaN(Number(digit))) {\n\t\t\t\tconsole.log(digit)\n\t\t\t\treturn letterToNumber[digit]\n\t\t\t} else return digit\n\t\t})\n\t\t.join('')\n}\n"]},"metadata":{},"sourceType":"module"}