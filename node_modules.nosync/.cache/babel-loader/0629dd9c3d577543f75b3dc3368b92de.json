{"ast":null,"code":"/* eslint-disable no-restricted-globals */\nlet CACHE_NAME = 'your-app-name';\nlet urlsToCache = ['/', '/completed']; // Install a service worker\n\nself.addEventListener('install', event => {\n  // Perform install steps\n  event.waitUntil(caches.open(CACHE_NAME).then(function (cache) {\n    console.log('Opened cache');\n    return cache.addAll(urlsToCache);\n  }));\n}); // Cache and return requests\n\nself.addEventListener('fetch', event => {\n  event.respondWith(caches.match(event.request).then(function (response) {\n    // Cache hit - return response\n    if (response) {\n      return response;\n    }\n\n    return fetch(event.request);\n  }));\n}); // Update a service worker\n\nself.addEventListener('activate', event => {\n  let cacheWhitelist = ['your-app-name'];\n  event.waitUntil(caches.keys().then(cacheNames => {\n    return Promise.all(cacheNames.map(cacheName => {\n      if (cacheWhitelist.indexOf(cacheName) === -1) {\n        return caches.delete(cacheName);\n      }\n    }));\n  }));\n});","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/serviceWorker.js"],"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","respondWith","match","request","response","fetch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"mappings":"AAAA;AACA,IAAIA,UAAU,GAAG,eAAjB;AACA,IAAIC,WAAW,GAAG,CAAC,GAAD,EAAM,YAAN,CAAlB,C,CAEA;;AACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAkCC,KAAD,IAAW;AAC3C;AACAA,EAAAA,KAAK,CAACC,SAAN,CACCC,MAAM,CAACC,IAAP,CAAYP,UAAZ,EAAwBQ,IAAxB,CAA6B,UAAUC,KAAV,EAAiB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAOF,KAAK,CAACG,MAAN,CAAaX,WAAb,CAAP;AACA,GAHD,CADD;AAMA,CARD,E,CAUA;;AACAC,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAAgCC,KAAD,IAAW;AACzCA,EAAAA,KAAK,CAACS,WAAN,CACCP,MAAM,CAACQ,KAAP,CAAaV,KAAK,CAACW,OAAnB,EAA4BP,IAA5B,CAAiC,UAAUQ,QAAV,EAAoB;AACpD;AACA,QAAIA,QAAJ,EAAc;AACb,aAAOA,QAAP;AACA;;AACD,WAAOC,KAAK,CAACb,KAAK,CAACW,OAAP,CAAZ;AACA,GAND,CADD;AASA,CAVD,E,CAYA;;AACAb,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAmCC,KAAD,IAAW;AAC5C,MAAIc,cAAc,GAAG,CAAC,eAAD,CAArB;AACAd,EAAAA,KAAK,CAACC,SAAN,CACCC,MAAM,CAACa,IAAP,GAAcX,IAAd,CAAoBY,UAAD,IAAgB;AAClC,WAAOC,OAAO,CAACC,GAAR,CACNF,UAAU,CAACG,GAAX,CAAgBC,SAAD,IAAe;AAC7B,UAAIN,cAAc,CAACO,OAAf,CAAuBD,SAAvB,MAAsC,CAAC,CAA3C,EAA8C;AAC7C,eAAOlB,MAAM,CAACoB,MAAP,CAAcF,SAAd,CAAP;AACA;AACD,KAJD,CADM,CAAP;AAOA,GARD,CADD;AAWA,CAbD","sourcesContent":["/* eslint-disable no-restricted-globals */\nlet CACHE_NAME = 'your-app-name'\nlet urlsToCache = ['/', '/completed']\n\n// Install a service worker\nself.addEventListener('install', (event) => {\n\t// Perform install steps\n\tevent.waitUntil(\n\t\tcaches.open(CACHE_NAME).then(function (cache) {\n\t\t\tconsole.log('Opened cache')\n\t\t\treturn cache.addAll(urlsToCache)\n\t\t}),\n\t)\n})\n\n// Cache and return requests\nself.addEventListener('fetch', (event) => {\n\tevent.respondWith(\n\t\tcaches.match(event.request).then(function (response) {\n\t\t\t// Cache hit - return response\n\t\t\tif (response) {\n\t\t\t\treturn response\n\t\t\t}\n\t\t\treturn fetch(event.request)\n\t\t}),\n\t)\n})\n\n// Update a service worker\nself.addEventListener('activate', (event) => {\n\tlet cacheWhitelist = ['your-app-name']\n\tevent.waitUntil(\n\t\tcaches.keys().then((cacheNames) => {\n\t\t\treturn Promise.all(\n\t\t\t\tcacheNames.map((cacheName) => {\n\t\t\t\t\tif (cacheWhitelist.indexOf(cacheName) === -1) {\n\t\t\t\t\t\treturn caches.delete(cacheName)\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t)\n\t\t}),\n\t)\n})\n"]},"metadata":{},"sourceType":"module"}