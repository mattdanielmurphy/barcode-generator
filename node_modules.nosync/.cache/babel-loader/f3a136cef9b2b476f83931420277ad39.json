{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Barcode from 'react-barcode';\nimport NumberPicker from './NumberPicker';\nimport logo from \"./logo.svg\";\nimport { text } from './text-sample';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g;\n\nfunction Base64DecodeUrl(str) {\n  return str ? str.replace(/-/g, '+').replace(/_/g, '/') : '';\n}\n\n_c = Base64DecodeUrl;\nconst letterToNumber = {\n  A: 8,\n  B: 8,\n  C: 0,\n  D: 0,\n  E: 8,\n  F: 8,\n  G: 0,\n  H: 8,\n  I: 1,\n  J: 0,\n  K: 8,\n  L: 1,\n  M: 0,\n  N: 8,\n  O: 0,\n  P: 2,\n  Q: 0,\n  R: 8,\n  S: 5,\n  T: 7,\n  U: 0,\n  V: 0,\n  W: 0,\n  X: 0,\n  Y: 1,\n  Z: 0\n};\n\nfunction replaceLettersWithLikelyDigits(str) {\n  return str.split('').map(digit => {\n    if (isNaN(Number(digit))) {\n      console.log(digit);\n      return letterToNumber[digit];\n    } else return digit;\n  }).join('');\n}\n\nfunction BarcodeContainer({\n  UPC,\n  index,\n  totalUPCs\n}) {\n  _s();\n\n  const [currentUPC, setCurrentUPC] = useState(() => {\n    return UPC;\n  });\n  const navUp = `#upc${index - 1}`;\n  const navDown = `#upc${index + 1}`;\n\n  function handleChange(e) {\n    setCurrentUPC(e.target.value);\n  }\n\n  function reset() {\n    setCurrentUPC(UPC);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `upc${index}`,\n    className: \"upc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [index + 1, \" of \", totalUPCs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Barcode, {\n      width: 3,\n      height: 400,\n      format: 'CODE128',\n      displayValue: false,\n      background: '#ffffff',\n      lineColor: '#000000',\n      margin: 10,\n      value: currentUPC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: currentUPC,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NumberPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: `#upc${index}`,\n        onClick: reset,\n        children: \"reset code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: navUp,\n        children: \"up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: navDown,\n        children: \"down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BarcodeContainer, \"RwXLpYditOGQoljcCiQQwM4K0bc=\");\n\n_c2 = BarcodeContainer;\n\nfunction iOS() {\n  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || // iPad on iOS 13 detection\n  navigator.userAgent.includes('Mac') && 'ontouchend' in document;\n}\n\nasync function App() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const URLEncodedText = urlParams.get('text');\n  const base64EncodedText = Base64DecodeUrl(URLEncodedText);\n  const text = atob(base64EncodedText);\n  const matches = text.match(re1);\n  const clipboardText = await navigator.clipboard.read();\n  console.log(clipboardText);\n  const fixedMatches = matches ? matches.map(match => {\n    if (match.length >= 12) {\n      if (/\\d{12}/.test(match)) {\n        return match;\n      } else {\n        return replaceLettersWithLikelyDigits(match);\n      }\n    } else {\n      return '';\n    }\n  }).filter(match => match) : [];\n  return matches ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [fixedMatches.map((match, i) => /*#__PURE__*/_jsxDEV(BarcodeContainer, {\n      totalUPCs: fixedMatches.length,\n      UPC: match,\n      index: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scan-more\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"button\",\n        href: \"shortcuts://run-shortcut?name=Scan%20Barcodes\",\n        children: \"Scan More UPCs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no matches found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"raw data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Base64DecodeUrl\");\n$RefreshReg$(_c2, \"BarcodeContainer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/matt/Documents/Programming/Projects/barcode-generator/src/App.js"],"names":["Barcode","NumberPicker","text","useState","re1","Base64DecodeUrl","str","replace","letterToNumber","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","replaceLettersWithLikelyDigits","split","map","digit","isNaN","Number","console","log","join","BarcodeContainer","UPC","index","totalUPCs","currentUPC","setCurrentUPC","navUp","navDown","handleChange","e","target","value","reset","width","height","format","displayValue","background","lineColor","margin","iOS","includes","navigator","platform","userAgent","document","App","queryString","window","location","search","urlParams","URLSearchParams","URLEncodedText","get","base64EncodedText","atob","matches","match","clipboardText","clipboard","read","fixedMatches","length","test","filter","i"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport Barcode from 'react-barcode'\nimport NumberPicker from './NumberPicker'\nimport logo from './logo.svg'\nimport { text } from './text-sample'\nimport { useState } from 'react'\n\nconst re1 = /[\\d]{0,3}[\\w]{0,2}[\\d]{7,}/g\n\nfunction Base64DecodeUrl(str) {\n\treturn str ? str.replace(/-/g, '+').replace(/_/g, '/') : ''\n}\n\nconst letterToNumber = {\n\tA: 8,\n\tB: 8,\n\tC: 0,\n\tD: 0,\n\tE: 8,\n\tF: 8,\n\tG: 0,\n\tH: 8,\n\tI: 1,\n\tJ: 0,\n\tK: 8,\n\tL: 1,\n\tM: 0,\n\tN: 8,\n\tO: 0,\n\tP: 2,\n\tQ: 0,\n\tR: 8,\n\tS: 5,\n\tT: 7,\n\tU: 0,\n\tV: 0,\n\tW: 0,\n\tX: 0,\n\tY: 1,\n\tZ: 0,\n}\n\nfunction replaceLettersWithLikelyDigits(str) {\n\treturn str\n\t\t.split('')\n\t\t.map((digit) => {\n\t\t\tif (isNaN(Number(digit))) {\n\t\t\t\tconsole.log(digit)\n\t\t\t\treturn letterToNumber[digit]\n\t\t\t} else return digit\n\t\t})\n\t\t.join('')\n}\n\nfunction BarcodeContainer({ UPC, index, totalUPCs }) {\n\tconst [currentUPC, setCurrentUPC] = useState(() => {\n\t\treturn UPC\n\t})\n\tconst navUp = `#upc${index - 1}`\n\tconst navDown = `#upc${index + 1}`\n\n\tfunction handleChange(e) {\n\t\tsetCurrentUPC(e.target.value)\n\t}\n\tfunction reset() {\n\t\tsetCurrentUPC(UPC)\n\t}\n\treturn (\n\t\t<div key={index} id={`upc${index}`} className='upc'>\n\t\t\t<h3>\n\t\t\t\t{index + 1} of {totalUPCs}\n\t\t\t</h3>\n\t\t\t<Barcode\n\t\t\t\t{...{\n\t\t\t\t\twidth: 3,\n\t\t\t\t\theight: 400,\n\t\t\t\t\tformat: 'CODE128',\n\t\t\t\t\tdisplayValue: false,\n\t\t\t\t\tbackground: '#ffffff',\n\t\t\t\t\tlineColor: '#000000',\n\t\t\t\t\tmargin: 10,\n\t\t\t\t}}\n\t\t\t\tvalue={currentUPC}\n\t\t\t/>\n\t\t\t<input type='text' value={currentUPC} onChange={handleChange} />\n\t\t\t<NumberPicker />\n\t\t\t<nav>\n\t\t\t\t<a className='button' href={`#upc${index}`} onClick={reset}>\n\t\t\t\t\treset code\n\t\t\t\t</a>\n\t\t\t\t<a className='button' href={navUp}>\n\t\t\t\t\tup\n\t\t\t\t</a>\n\t\t\t\t<a className='button' href={navDown}>\n\t\t\t\t\tdown\n\t\t\t\t</a>\n\t\t\t</nav>\n\t\t</div>\n\t)\n}\n\nfunction iOS() {\n\treturn (\n\t\t[\n\t\t\t'iPad Simulator',\n\t\t\t'iPhone Simulator',\n\t\t\t'iPod Simulator',\n\t\t\t'iPad',\n\t\t\t'iPhone',\n\t\t\t'iPod',\n\t\t].includes(navigator.platform) ||\n\t\t// iPad on iOS 13 detection\n\t\t(navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n\t)\n}\n\nasync function App() {\n\tconst queryString = window.location.search\n\tconst urlParams = new URLSearchParams(queryString)\n\tconst URLEncodedText = urlParams.get('text')\n\tconst base64EncodedText = Base64DecodeUrl(URLEncodedText)\n\tconst text = atob(base64EncodedText)\n\tconst matches = text.match(re1)\n\tconst clipboardText = await navigator.clipboard.read()\n\tconsole.log(clipboardText)\n\tconst fixedMatches = matches\n\t\t? matches\n\t\t\t\t.map((match) => {\n\t\t\t\t\tif (match.length >= 12) {\n\t\t\t\t\t\tif (/\\d{12}/.test(match)) {\n\t\t\t\t\t\t\treturn match\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn replaceLettersWithLikelyDigits(match)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter((match) => match)\n\t\t: []\n\n\treturn matches ? (\n\t\t<div className='App'>\n\t\t\t{fixedMatches.map((match, i) => (\n\t\t\t\t<BarcodeContainer\n\t\t\t\t\ttotalUPCs={fixedMatches.length}\n\t\t\t\t\tUPC={match}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tindex={i}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<p className='scan-more'>\n\t\t\t\t<a\n\t\t\t\t\tclassName='button'\n\t\t\t\t\thref='shortcuts://run-shortcut?name=Scan%20Barcodes'\n\t\t\t\t>\n\t\t\t\t\tScan More UPCs\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</div>\n\t) : (\n\t\t<>\n\t\t\t<h1>no matches found</h1>\n\t\t\t<div>raw data:</div>\n\t\t\t<div>{text}</div>\n\t\t</>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}